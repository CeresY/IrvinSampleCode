<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="hw1" class="web.spring.v20.HellWorld1">
		<property name="msg" value="Mrs.Borown"/>
		<property name="dt1">
			<!-- <bean name="date" class="java.util.Date"/> -->
			<ref bean="systime"/>
		</property>
	</bean>
	
	<bean id="systime" class="java.util.Date"/>
	
	<bean id="log" class="web.spring.v20.event.Log"/>
	
	<bean id="listener" class="web.spring.v20.event.LogListener"/>
	
	<!-- 使用Spring AOP实现日志输出 -->
	<bean id="timeBook" class="web.spring.v20.aop.TimeBook"/>
	<bean id="logAround" class="web.spring.v20.aop.LogAround"/>
	<!-- 
	<bean id="logAroundProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>web.spring.v20.aop.TimeBookInterface</value>
		</property>
		<property name="target">
			<ref bean="timeBook"/>
		</property>
		
		<property name="interceptorNames">
			<list>
				<value>logAround</value>
			</list>
		</property>
	</bean>
	 -->
	
	<!-- 与logAroundProxy不同，不用绑定interface所以只需要一个普通的类 -->
	<bean id="logAroundProxyCglib" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyTargetClass">
			<value>true</value>
		</property>
		<property name="target">
			<ref bean="timeBook"/>
		</property>
		
		<property name="interceptorNames">
			<list>
				<value>logAround</value>
			</list>
		</property>  
	</bean>
	
	<!-- 自动代理 -->
	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<bean id="logBefore" class="web.spring.v20.aop.LogBefore"/>
	<bean id="logBeforeAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="logBefore"/>
		</property>
		<property name="patterns">
			<value>.*doCheck.*</value>
		</property>
	</bean>
</beans>